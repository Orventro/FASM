#include "codes.h"

using namespace std;

enum code {
    halt = 0,
    syscall = 1,
    add = 2,
    addi = 3,
    sub = 4,
    subi = 5,
    mul = 6,
    muli = 7,
    div = 8,
    divi = 9,
    lc = 12,
    shl = 13,
    shli = 14,
    shr = 15,
    shri = 16,
    and = 17,
    andi = 18,
    or = 19,
    ori = 20,
    xor = 21,
    xori = 22,
    not = 23,
    mov = 24,
    addd = 32,
    subd = 33,
    muld = 34,
    divd = 35,
    itod = 36,
    dtoi = 37,
    push = 38,
    pop = 39,
    call = 40,
    calli = 41,
    ret = 42,
    cmp = 43,
    cmpi = 44,
    cmpd = 45,
    jmp = 46,
    jne = 47,
    jeq = 48,
    jle = 49,
    jl = 50,
    jge = 51,
    jg = 52,
    load = 64,
    store = 65,
    load2 = 66,
    store2 = 67,
    loadr = 68,
    loadr2 = 69,
    storer = 70,
    storer2 = 71
};

enum syscall {
    scanint     = 100,
    scandouble  = 101,
    printint    = 102,
    printdouble = 103,
    getchar     = 104,
    putchar     = 105
};

cmd["halt"] = 0;
cmd["syscall"] = 1;
cmd["add"] = 2;
cmd["addi"] = 3;
cmd["sub"] = 4;
cmd["subi"] = 5;
cmd["mul"] = 6;
cmd["muli"] = 7;
cmd["div"] = 8;
cmd["divi"] = 9;
cmd["lc"] = 12;
cmd["shl"] = 13;
cmd["shli"] = 14;
cmd["shr"] = 15;
cmd["shri"] = 16;
cmd["and"] = 17;
cmd["andi"] = 18;
cmd["or"] = 19;
cmd["ori"] = 20;
cmd["xor"] = 21;
cmd["xori"] = 22;
cmd["not"] = 23;
cmd["mov"] = 24;
cmd["addd"] = 32;
cmd["subd"] = 33;
cmd["muld"] = 34;
cmd["divd"] = 35;
cmd["itod"] = 36;
cmd["dtoi"] = 37;
cmd["push"] = 38;
cmd["pop"] = 39;
cmd["call"] = 40;
cmd["calli"] = 41;
cmd["ret"] = 42;
cmd["cmp"] = 43;
cmd["cmpi"] = 44;
cmd["cmpd"] = 45;
cmd["jmp"] = 46;
cmd["jne"] = 47;
cmd["jeq"] = 48;
cmd["jle"] = 49;
cmd["jl"] = 50;
cmd["jge"] = 51;
cmd["jg"] = 52;
cmd["load"] = 64;
cmd["store"] = 65;
cmd["load2"] = 66;
cmd["store2"] = 67;
cmd["loadr"] = 68;
cmd["loadr2"] = 69;
cmd["storer"] = 70;
cmd["storer2"] = 71;

enum format{
    RM = 100001, // load  r0 1232
    RR = 100002, // mov   r1 r2 0
    RI = 100003, // ori   r2 64
    J  = 100004  // calli 3121
};

fmt[0]  = RI;
fmt[1]  = RI;
fmt[2]  = RR;
fmt[3]  = RI;
fmt[4]  = RR;
fmt[5]  = RI;
fmt[6]  = RR;
fmt[7]  = RI;
fmt[8]  = RR;
fmt[9]  = RI;
fmt[12] = RI;
fmt[13] = RR;
fmt[14] = RI;
fmt[15] = RR;
fmt[16] = RI;
fmt[17] = RR;
fmt[18] = RI;
fmt[19] = RR;
fmt[20] = RI;
fmt[21] = RR;
fmt[22] = RI;
fmt[23] = RI;
fmt[24] = RR;
fmt[32] = RR;
fmt[33] = RR;
fmt[34] = RR;
fmt[35] = RR;
fmt[36] = RR;
fmt[37] = RR;
fmt[38] = RI;
fmt[39] = RI;
fmt[40] = RR;
fmt[41] = J;
fmt[42] = J;
fmt[43] = RR;
fmt[44] = RI;
fmt[45] = RR;
fmt[46] = J;
fmt[47] = J;
fmt[48] = J;
fmt[49] = J;
fmt[50] = J;
fmt[51] = J;
fmt[52] = J;
fmt[64] = RM;
fmt[65] = RM;
fmt[66] = RM;
fmt[67] = RM;
fmt[68] = RR;
fmt[69] = RR;
fmt[70] = RR;
fmt[71] = RR;